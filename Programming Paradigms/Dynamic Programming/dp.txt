Goal: 
Solve only subproblems that are necessary and solve it only once

Memorization is another way to deal with overlapping subproblems in dynamic programming

With memorization, we implement the algorithm recursively:
If we encounter a new subproblem, we compute and store the solution.
If we encounter a subproblem we have seen, we look up the answer

Most useful when the algorithm is easiest to implement recursively
Especially if we do not need solutions to all subproblems.


Step :
LIS
LCS
LPS


Memoization :
Fibonacci
0-1 Knapsack
Edit distance
Subset Sum


Dynamic Programming Problems :
1. Fibonacci
2. Coin Change
3. 0-1 Knapsack
4. Travelling Salesman Problem
5. Edit distance / String Editing
6. Subset Sum
7.  LIS
8.  LCS
9.  LPS
10. Matrix Chain Multiplication
11. Optimal Binary Search Tree
12. Egg Dropping Puzzle
13. Cutting a Rod
14. 
